.\" see groff_man for syntax.
.TH amalgam.h 3 "2025" "Amalgam Manual pages" "Library Calls"
.SH NAME
amalgam.h \-\- Main header file for the amalgam library.
.SH LIBRARY
libamalgam configure error handling with respect to build mode
.br
\fB(libamalgam -lamalgam)\fP
.SH SYNOPSIS
.SY
.PP
.BI #include\ <amalgam.h>
.br
Includes everything in the library through a single header file.
.PP
Individual header files for the modules.
.PP
.BI #include\ <labuildmode.h>
.br
Lets you configure build modes compiled time that can be identified
.br
run time. Stand alone module. 
.PP
.BI #include\ <lareleasemsg.h>
.br
Lets you define the reassuring error message the end\-user sees,
.br
should a
runtime error happen in a "\fBLA_REL\fP" build.
.PP
.BI #include\ <laassert.h>
.br
An assert with configurable behavior with respect to build mode.
.PP
.BI #include\ <lafailfast.h>
.br
A failfast error strategy with configurable behavior with respect
.br
to build mode.
.PP
.BI #include\ <lahappypath.h>
.br
A module for errorchecking with configurable behavior with respect
.br
to build mode.
.PP
.BI #include\ <laexception.h>
.br
A module for exception handling that is open for extension.
.PP
.BI #include\ <lasyserr.h>
.br
A module for returning OS specific constant for that \fBerrno\fP
.YS
.\" todo, write in the interface here.
.SH DESCRIPTION
.PP
\fBAmalgam\fP is a library that provides error handling strategies and
.br
parsing of compile time feature request macros to define the
.br
current
build mode run\-time, making it easy to configure the
.br
behavior of the error handling strategies (error messaging),
.br
letting them behave in a uniform fashion with respect to build
.br
mode. 
.PP
This caters for a unified behavior of different error handling
.br
strategies.
.PP
Therefore \fBamalgam\fP provides a productive addition where it is easy to
.br
configure the error handling for development ", testing and
.br
production for different kind of error handling strategies. 
.PP
The library is meant to let you keep your \fBlaassert\fPions active in
.br
releases, but printing a general user\-friendly error message..
.PP
If you don't specify one of the \fBLA_REL\fP, \fBLA_DEV\fP or \fBLA_DBG\fP feature
.br
requst macros on the compiler command line, the library will
.br
default to \fBLA_DEV\fP giving a "normal" behavior with regards to error
.br
messages.
.SS The different kinds of error handling strategies
.TP
Assertions
.BR assert_cii(3)
is a customized assertion that that may throw an exception,
that can be handled by a 
.B TRY ELSE END_TRY 
block by the
.BR  except (3)
module which can be used on its own for own exception handling..
.TP 
Error-checking
amalgam contains an
.BR ec(3)
module that contains methods for checking
run\(emtime errors through macros and goto's from system calls. This strategy
lets errors propagate through a happy path and eventualally produce a
reverse stack trace.
.TP 3
Embedded error messaging with subsequent exit.
The
.BR eprintf2 (3)
module contains functions for error messaging with exit,
it also contains wrappers for 
.BR emalloc (3)
and other system calls.
This is the simplest solution, but still a good one, when nothing really
can be done once an error has occured, but to exit.
.SS Overview of the other modules in the library
.TP
.BR err_conf (3)
Configuration of the error handling is done by this module which contains
mandatory calls for configuring whichever or sevenal of the  error
handling strategies you choose.
.TP
.BR syserr(3)
Delivering of error messages with the same constant as used in the mandual
pages so that no lookup or translation is needed.
.TP
.BR except.h (3)
A module that provides exception handling.
.SH ENVIRONMENT
The library as such is meant to work first and foremost on Linux with the
.BR gcc(1)
toolchain and
.BR gdb(1)
which is necessay for the stack traces.. 
.SS Interfaces
.TP
.BI #include <suvreq>
.br
	Standard Unix Version, determining and setting up.
.TP
.BI	#include <syserr.h>
Defines a function for returning the literal error constant according to errno.
.TP
.BI	#include <ec.h>
Consists of boilerplate macros and functions for writing cleaner code.
.SH FILES
.TP
~/.local/src/libsysutil/makefile
.TP
~/.local/src/libsysutil/syserr.[ch]
.TP
~/.local/src/libsysutil/ec.[ch]
.SH SEE ALSO
.BR err_conf (3)
.BR ec(3)
,
.BR eprintf2 (3)
, 
.BR syserr.h (3)
,
.BR except (3)
, ~/.local/src/libsysutil/makefile
.SH AUTHOR
Mark J.Rochkind Advanced Unix Programming 2nd edition.
.br
David R. Hanson "C Interfaces and Applications"
.SH COPYRIGHT
Mark J.Rochkind April 2004
.br
David R. Hanson 1996-2025

.\" vim: nospell
