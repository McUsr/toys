.\" see groff_man for syntax.
.TH Amalgam 7 "2025" "Amalgam Manual pages" "Miscellaneous Information Manual" 
.SH NAME
amalgam \- Configurable error strategies with respect to build mode.
.SH DESCRIPTION
.PP
\fBAmalgam\fP is a library that provides error handling strategies and
.br
parsing of compile time feature request macros to define the
.br
current
build mode, to make it easy to configure the behavior of
.br
the
error
handling strategies
behavior in a uniform fashion with
.br
respect to build mode. 
.PP
The motivation behind, is to have error handling strategies that
.br
behaves according to the current build mode, so that we can define
.br
the build mode to get the wanted behaviour of the error handling
.br
strategies.
.SS "Error handling strategies that \fBAmalgam\fP supports"
.PP
\fBAmalgam\fP supports several ways to check for errors, namely by
.br
.BI assertions "" ,
.BI "happy path" "" ,
and a 
.BI "fail fast"
strategy.
.PP
In addition it comes with an \fBException\fP module letting you create
.br
your own exceptions, but this is totally agnostic to build modes,
.br
so here you will need to implement everything build\-type wise
.br
on your own.
.TP
\fIlaassert.h(3)\fP \-\-\ assertions like normal assertions, in \fBLA_DEV\fP, but
.br
now
they will
launch \fBgdb\fP if an assertion fails in a \fBLA_DBG\fP
.br
build, and
print a user\-friendly message in a \fBLA_REL\fP build.
.TP 
\fIlahappypath.h(3)\fP standardizes the way of checking function return
.br
codes for errors and \fBerrno\fP after function/system calls, and
.br
provides a
nice call stack run\-time in \fBLA_DEV\fP build.
.TP 
\fIlafailfast.h(3)\fP are wrappers around regular system calls like
.br
\fImalloc(3)\fP, and \fIprintf(3)\fP functions that prints an error
.br
message to the console and dies, if a run\-time error happens,
.br
providing the same level
of information as \fIperror(3)\fP but can also
.br
be
utilized to return the \fBERROR\fP constant as specified on the man\-
.br
page for the library or system call. (The constant can vary from
.br
platform to platform).
.SS "The different build modes"
.TP
\fBLA_DBG\fP \-\- Debug mode used for inspecing runtime bugs in Gdb. 
.TP
\fBLA_DEV\fP \-\- Development mode for mimicking standard behavor runtime.
.TP
\fBLA_REL\fP \-\- Release mode gives a user friendly  message to end users.
.SS "About error messages"
.PP
\fBAmalgam\fP also provide more detail in error messages than
.BI perror(3)
.br
because we get  the constant for the error number that is referred
.br
to in the manual page for the function, like \fBEIO\fP is listed as an
.br
error code in the manual page for 
.BI read(2)
so that we
can simply
.br
read the explanation for the error code in the manual page.
.PP
Knowing possible reasons for an error can help during debugging.
.PP
Using one standard error message in \fBLA_REL\fP mode for runtime errors
.br
isn't only more user\-friendly, but also makes your program at least
.br
a little bit more difficult to exploit, hiding cause, filename and
.br
line\-number.
.PP
Launching \fBGdb\fP directly upon a run\-time error in \fBLA_DBG\fP mode letting
.br
you inspect variables and the call stack directly is a time saver
.br
during debugging.
.PP
This library enables you to keep your assertions active in release
.br
builds.
.SS "Additional interfaces provided, intrinsic to the library: 
.TP
\fIlabuildmode.h(3)\fP \-\- A public interface for parsing buildmodes
.TP
\fIlareleasemsg.h(3)\fP \-\- configuring a release error message:
.TP
\fIlaexception.h(3)\fP \-\- implementing your own exceptions:
.TP
\fIlasyserr.h(3)\fP  \-\- returning OS constant for \fBerrno\fP.
.SH SEE ALSO
.BI amalgam.h(3)
.BI laassert.h(3)
.BI lahappypath.h(3)
.BI lafailfast.h(3)
.br
.BI labuildmode.h(3)
.BI lareleasemsg.h(3)
.BI laexception.h(3)
.BI lasyserr.h(3)
.SH AUTHORS AND SOURCES
Mark J.Rochkind Advanced Unix Programming 2nd edition.
.br
David R. Hanson "C Interfaces and Applications"
.br
Brian W. Kernighan and Robert Pike "The Practice of Programming."
.br
Andrew G. Morgan Source code for making executable libraries.
.SH COPYRIGHT
Mark J.Rochkind April 2004-2025
.br
David R. Hanson 1996-2025
.br
Brian W. Kernighan and Robert Pike 1999-2025
.br
Andrew G. Morgan <morgan@kernel.org> 2021-205
.br
Tommy Bollman 2025 Mit License.

.\" vim: nospell
